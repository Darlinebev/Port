
@page "/login"
@rendermode @(new InteractiveServerRenderMode(prerender: false))
@using Microsoft.AspNetCore.Components.Forms
@inject HttpClient Http
@inject NavigationManager Nav

<h3>Login</h3>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <p style="color:red">@ErrorMessage</p>
}

<EditForm Model="model" OnValidSubmit="LoginAsync" FormName="loginForm">
    <InputText @bind-Value="model.Username" placeholder="Username" />
    <InputText type="password" @bind-Value="model.Password" placeholder="Password" />
    <button type="submit">Login</button>
</EditForm>

@code {
    private LoginModel model = new();
    private string? ErrorMessage;

    private class LoginModel
    {
        public string Username { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }

    private async Task LoginAsync()
    {
        try
        {
            Console.WriteLine($"Username from component: {model.Username}");
            Console.WriteLine($"Password from component: {model.Password}");

            // Call the new API endpoint to get the antiforgery token
            var antiforgeryToken = await GetAntiforgeryTokenAsync();

            var request = new HttpRequestMessage(HttpMethod.Post, "/api/login")
            {
                Content = JsonContent.Create(model)
            };
            
            // Add the token to the header with the correct name
            request.Headers.Add("RequestVerificationToken", antiforgeryToken);

            var response = await Http.SendAsync(request);

            if (response.IsSuccessStatusCode)
            {
                Nav.NavigateTo("/admin/articles");
            }
            else
            {
                ErrorMessage = "Login failed. Please check your credentials.";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = $"Error during login: {ex.Message}";
        }
    }
    
    // A helper method to make an HTTP GET request to the new endpoint
    private async Task<string> GetAntiforgeryTokenAsync()
    {
        var response = await Http.GetAsync("/api/antiforgery-token");
        response.EnsureSuccessStatusCode();
        return await response.Content.ReadAsStringAsync();
    }
}